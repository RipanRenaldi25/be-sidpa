// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PROCESS {
  UNPROCESS
  PROCESS
  PROCESSED
}

enum JENISSURAT {
  SURAT_KEMATIAN
  SKU
  DOMISILI
  KETERANGAN_LAHIR
  SURAT_PINDAH
  SURAT_SERBA_GUNA
}

enum ROLE {
  ADMIN
  USER
}

model Users {
  nik             String           @id @db.VarChar(255)
  username        String           @unique @db.VarChar(255)
  password        String           @db.VarChar(255)
  roleId          String           @db.VarChar(255)
  name            String           @db.VarChar(255)
  authentications Authentications?
  contacts        Contacts[]
  requests        Requests[]
  roles           Roles            @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Requests {
  id        String      @id @default(uuid()) @db.VarChar(255)
  process   PROCESS     @default(UNPROCESS)
  createdAt DateTime    @default(now()) @db.Timestamp
  updatedAt DateTime    @default(now()) @db.Timestamp
  documents Documents[]
  nik       String      @db.VarChar(255)
  users     Users       @relation(fields: [nik], references: [nik])

  @@map("requests")
}

model Contacts {
  id          Int    @id @default(autoincrement())
  phoneNumber String @db.VarChar(255)
  nik         String @db.VarChar(255)
  users       Users  @relation(fields: [nik], references: [nik])

  @@map("contact")
}

model Roles {
  id    String  @id @db.VarChar(255)
  role  ROLE    @default(USER)
  Users Users[]

  @@map("roles")
}

model Authentications {
  token String @id @db.VarChar(255)
  nik   String @unique @db.VarChar(255)
  user  Users  @relation(fields: [nik], references: [nik])

  @@map("authentications")
}

model Documents {
  id        String     @id @default(uuid()) @db.VarChar(255)
  title     String     @db.VarChar(255)
  type      JENISSURAT
  createdAt DateTime   @default(now()) @db.Timestamp
  url       String     @db.Text()
  nik       String     @db.VarChar(255)
  requestId String     @db.VarChar(255)
  requests  Requests   @relation(fields: [requestId], references: [id])

  @@map("documents")
}
